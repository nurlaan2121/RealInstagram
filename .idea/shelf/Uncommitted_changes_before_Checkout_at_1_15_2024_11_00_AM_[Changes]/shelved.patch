Index: src/main/java/com/example/realinstagram/servises/UserImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.realinstagram.servises;\r\n\r\nimport com.example.realinstagram.daos.UserDao;\r\nimport com.example.realinstagram.exceptions.NotFound;\r\nimport com.example.realinstagram.interfaces.UserInterface;\r\nimport com.example.realinstagram.models.User;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.List;\r\nimport java.util.logging.Logger;\r\n\r\npublic class UserImpl implements UserInterface {\r\n\r\n    private final UserDao userDao;\r\n\r\n    public UserImpl(UserDao userDao) {\r\n        this.userDao = userDao;\r\n    }\r\n    @Override\r\n    public String saveUser(User user) {\r\n        try {\r\n            if (checkUniq(user.getLogin()) && checkUniqLength(user.getLogin())\r\n                    && checkUniqLength(user.getPassword())) {\r\n                userDao.addUser(user);\r\n                return \"\";\r\n            } else throw new NotFound(\"Incorrect , please write more 4 symbol\");\r\n        } catch (SQLException | NotFound e) {\r\n            return e.getMessage();\r\n        }\r\n    }\r\n    @Override\r\n    public String deleteUser(User user) {\r\n        try {\r\n            if (checkUniq(user.getLogin()) && checkUniqLength(user.getLogin())\r\n                    && checkUniqLength(user.getPassword())) {\r\n                userDao.deleteUser(user);\r\n                return \"\";\r\n            } else throw new NotFound(\"Incorrect\");\r\n        } catch (SQLException | NotFound e) {\r\n            return e.getMessage();\r\n        }\r\n    }\r\n    public String deleteUserById(Long userId){\r\n        try {\r\n            if (checkUserId(userId)){\r\n                userDao.deleteUserById(userId);\r\n                return \"\";\r\n            } else throw new NotFound(\"User with id: '\"+userId+\"' not found\");\r\n        } catch (SQLException | NotFound e) {\r\n            return e.getMessage();\r\n        }\r\n    }\r\n    @Override\r\n    public User logIn(String login, String password) {\r\n        try {\r\n            if (checkUniq(login) && checkUniqLength(login) && checkUniqLength(password)) {\r\n                return userDao.getOneUser(login, password);\r\n            } else throw new NotFound(\"Incorrect user name or password\");\r\n        } catch (SQLException | NotFound e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    @Override\r\n    public List<User> getAllUsers() {\r\n        try {\r\n            return userDao.getAllUsers();\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    @Override\r\n    public User findUserById(Long id) {\r\n        try {\r\n            if (checkUserId(id)) {\r\n                return userDao.getUserById(id);\r\n            } else throw new NotFound(\"user with id: '\"+id+\"' not found\");\r\n        } catch (SQLException | NotFound e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n    private boolean checkUniq(String str) throws SQLException {\r\n        return userDao.getAllUsers().stream()\r\n                .anyMatch(user -> !user.getLogin().equalsIgnoreCase(str));\r\n    }\r\n    private boolean checkUniqLength(String str){\r\n        return str.length() > 4;\r\n    }\r\n    private boolean checkUserId(Long userId) throws SQLException {\r\n        return userDao.getAllUsers().stream()\r\n                .anyMatch(user -> user.getId().equals(userId));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/realinstagram/servises/UserImpl.java b/src/main/java/com/example/realinstagram/servises/UserImpl.java
--- a/src/main/java/com/example/realinstagram/servises/UserImpl.java	(revision 606fbe7491e353294d56f5aadd24393ad2fbd4a4)
+++ b/src/main/java/com/example/realinstagram/servises/UserImpl.java	(date 1705294624233)
@@ -43,6 +43,7 @@
     public String deleteUserById(Long userId){
         try {
             if (checkUserId(userId)){
+
                 userDao.deleteUserById(userId);
                 return "";
             } else throw new NotFound("User with id: '"+userId+"' not found");
